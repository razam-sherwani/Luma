# Generated by Django 5.2.6 on 2025-09-27 02:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_hcrrecommendation_userprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientCohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('condition', models.CharField(max_length=100)),
                ('specialty', models.CharField(max_length=100)),
                ('patient_count', models.IntegerField(default=0)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActionableInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('MISSING_TREATMENT', 'Missing Standard-of-Care Treatment'), ('NEW_RESEARCH', 'New Research Highly Relevant'), ('PATIENT_COHORT', 'Patient Cohort Opportunity'), ('ENGAGEMENT_OVERDUE', 'Overdue Engagement'), ('TREATMENT_GAP', 'Treatment Gap Identified')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority_score', models.IntegerField(default=0)),
                ('patient_impact', models.IntegerField(default=0)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('is_addressed', models.BooleanField(default=False)),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actionable_insights', to='core.hcp')),
                ('research_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.researchupdate')),
                ('cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.patientcohort')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_name', models.CharField(max_length=200)),
                ('success_rate', models.FloatField()),
                ('side_effects', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_outcomes', to='core.patientcohort')),
            ],
        ),
        migrations.CreateModel(
            name='CohortRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('HIGH', 'High Priority'), ('MEDIUM', 'Medium Priority'), ('LOW', 'Low Priority')], default='MEDIUM', max_length=6)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cohort_recommendations', to='core.hcp')),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patientcohort')),
                ('treatment_outcome', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.treatmentoutcome')),
            ],
        ),
    ]
