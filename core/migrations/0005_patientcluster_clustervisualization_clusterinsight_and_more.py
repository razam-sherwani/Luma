# Generated by Django 5.2.6 on 2025-09-27 03:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_anonymizedpatient_emrdatapoint_patientoutcome'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cluster_type', models.CharField(choices=[('DIAGNOSIS', 'Diagnosis-Based'), ('TREATMENT_RESPONSE', 'Treatment Response'), ('RISK_PROFILE', 'Risk Profile'), ('DEMOGRAPHIC', 'Demographic'), ('CLINICAL', 'Clinical Metrics')], max_length=20)),
                ('description', models.TextField()),
                ('patient_count', models.IntegerField(default=0)),
                ('avg_risk_score', models.FloatField(default=0.0)),
                ('primary_diagnosis', models.CharField(blank=True, max_length=200)),
                ('common_treatments', models.TextField(blank=True)),
                ('success_rate', models.FloatField(default=0.0)),
                ('cluster_center', models.JSONField(default=dict)),
                ('features_used', models.JSONField(default=list)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_clusters', to='core.hcp')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterVisualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visualization_type', models.CharField(max_length=50)),
                ('data', models.JSONField(default=dict)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizations', to='core.patientcluster')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('TREATMENT_EFFECTIVENESS', 'Treatment Effectiveness'), ('PATTERN_DISCOVERY', 'Pattern Discovery'), ('RISK_FACTORS', 'Risk Factors'), ('TREATMENT_GAPS', 'Treatment Gaps'), ('OPTIMIZATION_OPPORTUNITY', 'Optimization Opportunity')], max_length=25)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('confidence_score', models.FloatField(default=0.0)),
                ('actionable_recommendations', models.TextField()),
                ('supporting_data', models.JSONField(default=dict)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('is_implemented', models.BooleanField(default=False)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='core.patientcluster')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(default=0.0)),
                ('assigned_date', models.DateField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_memberships', to='core.anonymizedpatient')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='core.patientcluster')),
            ],
            options={
                'unique_together': {('patient', 'cluster')},
            },
        ),
    ]
